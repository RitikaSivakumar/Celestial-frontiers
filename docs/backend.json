{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserProfile",
      "type": "object",
      "description": "Represents a user profile within the Mindful Path application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user profile."
        },
        "fullName": {
          "type": "string",
          "description": "The user's full name."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "dateOfBirth": {
          "type": "string",
          "description": "The user's date of birth.",
          "format": "date-time"
        },
        "preferredLanguage": {
          "type": "string",
          "description": "The user's preferred language (e.g., English, Tamil, Hindi)."
        },
        "trustedContact1Id": {
          "type": "string",
          "description": "Reference to UserProfile for trusted contact 1. (Relationship: UserProfile 1:N UserProfile (as Trusted Contact))"
        },
        "trustedContact2Id": {
          "type": "string",
          "description": "Reference to UserProfile for trusted contact 2. (Relationship: UserProfile 1:N UserProfile (as Trusted Contact))"
        }
      },
      "required": [
        "id",
        "fullName",
        "email",
        "dateOfBirth",
        "preferredLanguage"
      ]
    },
    "MentalHealthAssessment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "MentalHealthAssessment",
      "type": "object",
      "description": "Represents a mental health assessment (e.g., PHQ-9, GAD-7) taken by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the assessment."
        },
        "userId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N MentalHealthAssessment)"
        },
        "assessmentType": {
          "type": "string",
          "description": "Type of assessment (e.g., PHQ-9, GAD-7)."
        },
        "assessmentDate": {
          "type": "string",
          "description": "Date and time when the assessment was taken.",
          "format": "date-time"
        },
        "score": {
          "type": "number",
          "description": "The score of the assessment."
        }
      },
      "required": [
        "id",
        "userId",
        "assessmentType",
        "assessmentDate",
        "score"
      ]
    },
    "MedicationReminder": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "MedicationReminder",
      "type": "object",
      "description": "Represents a medication reminder set by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the medication reminder."
        },
        "userId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N MedicationReminder)"
        },
        "medicationName": {
          "type": "string",
          "description": "Name of the medication."
        },
        "reminderTime": {
          "type": "string",
          "description": "Time when the reminder should be triggered.",
          "format": "date-time"
        },
        "dosage": {
          "type": "string",
          "description": "Dosage of the medication."
        },
        "isCompleted": {
          "type": "boolean",
          "description": "Indicates if the reminder has been completed."
        }
      },
      "required": [
        "id",
        "userId",
        "medicationName",
        "reminderTime",
        "dosage",
        "isCompleted"
      ]
    },
    "MoodLog": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "MoodLog",
      "type": "object",
      "description": "Represents a user's daily mood log.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the mood log."
        },
        "userId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N MoodLog)"
        },
        "logDate": {
          "type": "string",
          "description": "Date of the mood log.",
          "format": "date-time"
        },
        "mood": {
          "type": "string",
          "description": "The user's mood (e.g., happy, neutral, sad)."
        },
        "diaryEntry": {
          "type": "string",
          "description": "Optional journal entry (text or voice note)."
        },
        "specialEvents": {
          "type": "string",
          "description": "Notes about special events or activities."
        }
      },
      "required": [
        "id",
        "userId",
        "logDate",
        "mood"
      ]
    },
    "Doctor": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Doctor",
      "type": "object",
      "description": "Represents a verified doctor in the system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the doctor."
        },
        "fullName": {
          "type": "string",
          "description": "Doctor's full name."
        },
        "specialization": {
          "type": "string",
          "description": "Doctor's specialization."
        },
        "contactNumber": {
          "type": "string",
          "description": "Doctor's contact number."
        }
      },
      "required": [
        "id",
        "fullName",
        "specialization",
        "contactNumber"
      ]
    },
    "UserDoctorConnection": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserDoctorConnection",
      "type": "object",
      "description": "Represents the connection between a user and a doctor.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user-doctor connection."
        },
        "userId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N UserDoctorConnection)"
        },
        "doctorId": {
          "type": "string",
          "description": "Reference to Doctor. (Relationship: Doctor 1:N UserDoctorConnection)"
        },
        "assignmentDate": {
          "type": "string",
          "description": "Date when the doctor was assigned to the user.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "doctorId",
        "assignmentDate"
      ]
    },
    "EmergencyContactDetails": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "EmergencyContactDetails",
      "type": "object",
      "description": "Emergency Contact Details",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N EmergencyContactDetails)"
        },
        "id": {
          "type": "string",
          "description": "Unique Identifier for Emergency Contact Details"
        },
        "name": {
          "type": "string",
          "description": "Emergency Contact's Name"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Emergency Contact's Phone Number"
        },
        "relationship": {
          "type": "string",
          "description": "Emergency Contact's relationship to user"
        }
      },
      "required": [
        "userId",
        "id",
        "name",
        "phoneNumber",
        "relationship"
      ]
    },
    "CommunityConnection": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CommunityConnection",
      "type": "object",
      "description": "Represents a real-time connection between peers using public spaces and community features of the app.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the community connection event."
        },
        "initiatorUserId": {
          "type": "string",
          "description": "Reference to UserProfile who initiated the connection. (Relationship: UserProfile 1:N CommunityConnection (Initiator))"
        },
        "participantUserId": {
          "type": "string",
          "description": "Reference to UserProfile who is participating in the connection. (Relationship: UserProfile 1:N CommunityConnection (Participant))"
        },
        "connectionTime": {
          "type": "string",
          "description": "Date and time when the connection occurred.",
          "format": "date-time"
        },
        "locationDetails": {
          "type": "string",
          "description": "Details about the public space or location where the connection occurred (e.g., park name, community center)."
        },
        "activityType": {
          "type": "string",
          "description": "Type of activity during the connection (e.g., walking, group discussion, shared hobby)."
        }
      },
      "required": [
        "id",
        "initiatorUserId",
        "participantUserId",
        "connectionTime",
        "locationDetails",
        "activityType"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/userProfiles/{userProfileId}",
        "definition": {
          "entityName": "userProfile",
          "schema": {
            "$ref": "#/backend/entities/UserProfile"
          },
          "description": "Stores user profile data. Path-based ownership ensures only the user can access their profile. Includes standard profile information.",
          "params": [
            {
              "name": "userProfileId",
              "description": "The unique identifier for the user profile."
            }
          ]
        }
      },
      {
        "path": "/userProfiles/{userProfileId}/mentalHealthAssessments/{assessmentId}",
        "definition": {
          "entityName": "mentalHealthAssessment",
          "schema": {
            "$ref": "#/backend/entities/MentalHealthAssessment"
          },
          "description": "Stores mental health assessment data for a specific user. Path-based ownership ensures only the user can access their assessments.",
          "params": [
            {
              "name": "userProfileId",
              "description": "The unique identifier for the user profile."
            },
            {
              "name": "assessmentId",
              "description": "The unique identifier for the mental health assessment."
            }
          ]
        }
      },
      {
        "path": "/userProfiles/{userProfileId}/medicationReminders/{reminderId}",
        "definition": {
          "entityName": "medicationReminder",
          "schema": {
            "$ref": "#/backend/entities/MedicationReminder"
          },
          "description": "Stores medication reminders for a specific user. Path-based ownership ensures only the user can access their reminders.",
          "params": [
            {
              "name": "userProfileId",
              "description": "The unique identifier for the user profile."
            },
            {
              "name": "reminderId",
              "description": "The unique identifier for the medication reminder."
            }
          ]
        }
      },
      {
        "path": "/userProfiles/{userProfileId}/moodLogs/{moodLogId}",
        "definition": {
          "entityName": "moodLog",
          "schema": {
            "$ref": "#/backend/entities/MoodLog"
          },
          "description": "Stores mood logs for a specific user. Path-based ownership ensures only the user can access their mood logs.",
          "params": [
            {
              "name": "userProfileId",
              "description": "The unique identifier for the user profile."
            },
            {
              "name": "moodLogId",
              "description": "The unique identifier for the mood log."
            }
          ]
        }
      },
      {
        "path": "/doctors/{doctorId}",
        "definition": {
          "entityName": "doctor",
          "schema": {
            "$ref": "#/backend/entities/Doctor"
          },
          "description": "Stores information about verified doctors. Doctors are globally accessible, but creation/modification is restricted to admin roles (enforced via security rules).",
          "params": [
            {
              "name": "doctorId",
              "description": "The unique identifier for the doctor."
            }
          ]
        }
      },
      {
        "path": "/userDoctorConnections/{connectionId}",
        "definition": {
          "entityName": "userDoctorConnection",
          "schema": {
            "$ref": "#/backend/entities/UserDoctorConnection"
          },
          "description": "Stores connections between users and doctors.  Access controlled via security rules based on the userId and doctorId.",
          "params": [
            {
              "name": "connectionId",
              "description": "The unique identifier for the user-doctor connection."
            }
          ]
        }
      },
      {
        "path": "/userProfiles/{userProfileId}/emergencyContactDetails/{contactId}",
        "definition": {
          "entityName": "emergencyContactDetails",
          "schema": {
            "$ref": "#/backend/entities/EmergencyContactDetails"
          },
          "description": "Stores emergency contact details for a user. Path-based ownership ensures only the user can access their emergency contact information.",
          "params": [
            {
              "name": "userProfileId",
              "description": "The unique identifier for the user profile."
            },
            {
              "name": "contactId",
              "description": "The unique identifier for the emergency contact details."
            }
          ]
        }
      },
      {
        "path": "/communityConnections/{connectionId}",
        "definition": {
          "entityName": "communityConnection",
          "schema": {
            "$ref": "#/backend/entities/CommunityConnection"
          },
          "description": "Stores real-time connections between peers using public spaces. Security rules ensure that only the initiator or participant of the connection can access the data. This enables QAPs by controlling which users can list which connections.",
          "params": [
            {
              "name": "connectionId",
              "description": "The unique identifier for the community connection event."
            }
          ]
        }
      }
    ],
    "reasoning": "This Firestore structure prioritizes authorization independence and simplifies security rules. It utilizes path-based ownership for user-specific data and membership maps for collaborative data, denormalizing data to avoid complex `get()` calls in security rules. This approach makes security rules more robust and easier to debug. Segregation ensures each collection has a clear security posture. The `CommunityConnection` leverages denormalization to maintain authorization independence, ensuring users can only access connection data where they are either the initiator or the participant. This design supports QAPs by clearly defining data ownership and access rights, avoiding filtering in rules. The structure promotes clarity, predictability, and consistency, making it easy to understand and maintain the application's data model and security policies."
  }
}